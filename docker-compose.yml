services:
  supabase:
    image: supabase/supabase:latest
    container_name: buddian-supabase
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-buddian_password}
      - POSTGRES_DB=${POSTGRES_DB:-buddian}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      - ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      - SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU}
      - SUPABASE_URL=${SUPABASE_URL:-http://localhost:54321}
    ports:
      - "54321:8000"  # Supabase API
      - "54323:8001"  # Supabase Studio
      - "5432:5432"   # PostgreSQL
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - buddian-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "buddian"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  bot:
    build:
      context: .
      dockerfile: packages/bot/Dockerfile
    container_name: buddian-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SUPABASE_URL=${SUPABASE_URL:-http://supabase:8000}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_VISION_ENDPOINT=${AZURE_VISION_ENDPOINT:-}
      - AZURE_VISION_KEY=${AZURE_VISION_KEY:-}
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - buddian-network
    depends_on:
      supabase:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  nginx:
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
    container_name: buddian-nginx
    restart: unless-stopped
    profiles:
      - "internal-proxy"
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:8443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - buddian-network
    environment:
      - DOMAIN=${DOMAIN:-buddian.com}
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      bot:
        condition: service_healthy

networks:
  buddian-network:
    driver: bridge
    name: buddian-network

volumes:
  logs:
    driver: local
  uploads:
    driver: local
  ssl:
    driver: local
  supabase_data:
    driver: local
