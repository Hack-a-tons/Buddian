version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: packages/bot/Dockerfile
    container_name: buddian-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - CONVEX_URL=${CONVEX_URL}
      - CONVEX_ADMIN_KEY=${CONVEX_ADMIN_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_VISION_ENDPOINT=${AZURE_VISION_ENDPOINT}
      - AZURE_VISION_KEY=${AZURE_VISION_KEY}
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - buddian-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  nginx:
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
    container_name: buddian-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - buddian-network
    environment:
      - DOMAIN=${DOMAIN:-buddian.com}
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      bot:
        condition: service_healthy

  convex-dev:
    image: node:18-alpine
    container_name: buddian-convex-dev
    restart: unless-stopped
    working_dir: /app
    command: sh -c "npm install -g convex && convex dev --once"
    environment:
      - CONVEX_URL=${CONVEX_URL}
      - CONVEX_ADMIN_KEY=${CONVEX_ADMIN_KEY}
    volumes:
      - ./convex:/app/convex
      - ./package.json:/app/package.json
    networks:
      - buddian-network
    profiles:
      - development

networks:
  buddian-network:
    driver: bridge
    name: buddian-network

volumes:
  logs:
    driver: local
  uploads:
    driver: local
  ssl:
    driver: local
